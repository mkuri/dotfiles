#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# prompt
PS1='[\u \[\e[34m\]\w\[\e[0m\]]$(__git_ps1)\n\[\e[33m\]\$\[\e[0m\] '

# env
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share
export PATH=$PATH:$HOME/.local/bin
if type nvim > /dev/null 2>&1; then
    export EDITOR=nvim
fi

# alias
alias ls='ls -la --color=auto'
alias j='cd $(fd --type d --hidden . . ~ | fzf)'

# history
export HISTFILE=$XDG_DATA_HOME/bash/history
export HISTSIZE=10000
export HISTCONTROL=erasedups
shopt -u histappend
share_history(){
  history -a
  history -c
  history -r
}
PROMPT_COMMAND='share_history'

# bash-completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# fzf
if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ]; then
  source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash
fi

# docker
export DOCKER_BUILDKIT=1
export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock

# rust
source $HOME/.cargo/env

# ros2
source /opt/ros/galactic/setup.bash
export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
export LD_LIBRARY_PATH="/usr/local/libtorch/lib:$LD_LIBRARY_PATH"
export RCUTILS_COLORIZED_OUTPUT=1
source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash

# cuda
export PATH="/usr/local/cuda/bin:$PATH"
export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"

# nodejs
export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
